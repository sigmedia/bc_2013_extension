plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'eclipse'
    id 'maven-publish'
    // id 'com.gradle.plugin-publish' version '0.9.7'
}

eclipse {
    classpath {
        downloadJavadoc = true
    }
}

group 'de.dfki.mary'
version '2.3.1.1-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    compile group:'commons-io', name:'commons-io', version:'2.4'
    compile group:'org.apache.commons', name:'commons-math3', version:'3.6.1'

    testCompile group: 'org.assertj', name:'assertj-core', version: '3.10.0'
    testCompile group: 'org.testng', name: 'testng', version: '6.8.13'
}



task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    from sourceSets.main.allGroovy
}

test {
  // enable TestNG support (default is JUnit)
  useTestNG()
}

gradlePlugin {
    plugins {
        htsVoiceBuildingPlugin {
            id = 'de.dfki.mary.htsvoicebuilding'
            implementationClass = 'de.dfki.mary.htsvoicebuilding.HTSVoicebuildingPlugin'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier 'sources'
            }
        }
    }
    repositories {
        maven {
            url version.endsWith('-SNAPSHOT') ? 'https://oss.jfrog.org/artifactory/oss-snapshot-local' : 'https://api.bintray.com/maven/slemaguer/maven/marytts'
            credentials {
                username = findProperty('bintrayUser')
                password = findProperty('bintrayApiKey')
            }
        }
    }
}

// pluginBundle {
//     website = 'https://github.com/marytts/gradle-marytts-htsvoicebuilding-plugin'
//     vcsUrl = 'https://github.com/marytts/gradle-marytts-htsvoicebuilding-plugin'
//     description = 'An HTS process training based on gradle and gpars for the parallelism'
//     tags = ['text-to-speech', 'marytts', 'hts', 'voicebuilding']

//     plugins {
//         lexiconCompilerPlugin {
//             id = 'de.dfki.mary.htspacking'
//             displayName = 'An HTS process training based on gradle and gpars for the parallelism'
//         }
//     }
// }
